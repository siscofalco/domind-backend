{"version":3,"sources":["services/auth-service.js","context/auth.context.js","pages/login/Login.js","pages/login/Logout.js","pages/signup/Signup.js","pages/signup/SignupPatient.js","components/routes/AnonRoutes.js","components/routes/PrivateRoutes.js","components/UserSelector.js","services/doctor-service.js","components/modals/BaseModal.js","components/modals/EditDoctorModal.js","pages/profile/DoctorProfile.js","services/patient-service.js","services/diary-service.js","services/activity-service.js","components/modals/ActivityModal.js","components/modals/DiaryModal.js","helpers/helpers.js","pages/profile/PatientProfile.js","services/session-service.js","components/modals/SeeActivityModal.js","components/modals/CreateActivityModal.js","components/modals/SessionModal.js","components/modals/EditPatientModal.js","pages/profile/PatientDetails.js","components/NavbarComponent.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","this","instance","axios","create","baseURL","process","withCredentials","data","post","get","React","createContext","Consumer","Provider","AuthProvider","state","isLoggedIn","isLoading","user","signup","a","response","setState","login","then","catch","logout","error","console","edit","className","value","props","children","Component","withAuth","WrappedComponent","validators","username","password","message","length","fields","errors","event","preventDefault","target","name","onSubmit","e","handleSubmit","TextField","type","placeholder","onChange","handleChange","Button","variant","color","href","Logout","window","location","EMAIL_PATTERN","email","test","mobilephone","birthdate","log","signupPatient","reload","Array","isArray","patients","to","routeProps","exact","path","redirectPath","ComponentToShow","component","render","_id","setTimeout","DoctorService","id","body","put","BaseModal","visible","onClick","onModalClose","stopPropagation","EditDoctorModal","content","isSuccess","editDoctor","onUsernameChange","onNameChange","onEmailChange","onMobilephoneChange","DoctorProfile","doctor","isEditDoctorModalVisible","match","params","getDoctor","getDoctorData","map","item","withRouter","PatientService","delete","DiaryService","ActivityService","ActivityModal","answers","questions","index","editActivity","onAnswerChange","sendAnswers","DiaryModal","comment","text","createDiary","patient","patientId","readOnly","isNew","onTextChange","getDateFormat","date","d","Date","day","getDate","month","getMonth","year","getFullYear","getInputDateFormat","PatientProfile","activities","diary","isActivityModalVisible","currentActivity","isDiaryModalVisible","currentDiary","getPatient","getPatientData","activity","deleteDiary","openActivityModal","newDiary","openDiaryModal","onCloseModal","SessionService","SeeActivity","haveAnswers","CreateActivityModal","questionsAux","push","filteredQuestions","filter","createActivity","addNewQuestion","sendQuestions","SessionModal","createSession","EditPatientModal","editPatient","onBirthdateChange","PatientDetails","sessions","isSeeActivityModalVisible","isCreateActivityModalVisible","isSessionModalVisible","isEditPatientModalVisible","session","currentSession","deleteActivity","deleteSession","deletePatient","seeActivityModal","seeSessionModal","SeeActivityModal","redirectTo","url","includes","App","UserSelector","SignupPatient","Signup","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b87fef6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class AuthService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signupPatient(data){\n        return(this.instance.post('/signup-patient', data)); \n    }\n\n    signup(data){\n        return(this.instance.post('/signup-doctor', data)); \n    }\n\n    login(data){\n        return(this.instance.post('/login', data));\n    }\n\n    logout(){\n        return(this.instance.post('/logout'));\n    }\n\n    isLoggedIn(){\n        return(this.instance.get('/loggedin'));\n    }\n\n    edit(data){\n        return(this.instance.post('/edit', data));\n    }\n\n}","import React from 'react';\nimport AuthService from '../services/auth-service';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nconst { Consumer, Provider } = React.createContext();\n\nclass AuthProvider extends React.Component {\n    state = {\n        isLoggedIn: false,\n        isLoading: true,\n        user: null\n    };\n\n    AuthService = new AuthService();\n\n    componentDidMount() {\n        this.AuthService.isLoggedIn()\n        .then((user) => {\n            if (user) {\n                this.setState({\n                    isLoggedIn: true,\n                    isLoading: false,\n                    user\n                });\n            }\n        })\n        .catch(() => {\n            this.setState({ isLoggedIn: false, isLoading: false, user: null})\n        })\n    }\n\n     // data serán los campos rellados del formulario de Signup\n    signup = async (data) => {\n        try {\n            const response = await this.AuthService.signup(data);\n            if(response){\n                this.setState({ isLoggedIn: true, user: response.data })\n            }\n        } catch(err){\n            this.setState({ isLoggedIn: false, user: null })\n        }\n    }\n\n    // data serán los campos rellados del formulario de Login\n    login = (data) => {\n        this.AuthService.login(data)\n        .then(response => this.setState({ isLoggedIn: true, user: response.data }))\n        .catch(() => this.setState({ isLoggedIn: false, user: null }))\n    }\n\n    logout = () => {\n        this.AuthService.logout()\n        .then(() => this.setState({ isLoggedIn: false, user: null }))\n        .catch(error => console.error(error))\n    }\n\n    edit = (data) => {\n        this.AuthService.edit(data)\n        .then(response => this.setState({ ...this.state, user: response.data }))\n        .catch(error => console.error(error))\n    }\n\n  render(){\n    const { isLoggedIn, isLoading, user } = this.state;\n\n    if(isLoading) return <div className=\"loadingContainer\"><CachedIcon /></div>;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, signup: this.signup, login: this.login, logout: this.logout, edit: this.edit }}>\n        {this.props.children}\n      </Provider>\n    )\n  }\n}\n\n\n\n// HOC - High Order Component that converts regular component into Consumer\nconst withAuth = (WrappedComponent) => {\n\n    return function(props){\n      return (\n        <Consumer>\n          {\n            (value) => {\n              const { isLoading, isLoggedIn, user, signup, login, logout, edit } = value;\n  \n              // Pasamos las props propias del contexto y además las props que ya recibiera el componente previamente via {...props}\n              return (\n                <WrappedComponent\n                  isLoggedIn={isLoggedIn}\n                  isLoading={isLoading}\n                  user={user}\n                  signup={signup}\n                  login={login}\n                  logout={logout}\n                  edit={edit}\n                  {...props}\n  \n                />\n              )\n            }\n          }\n        </Consumer>\n      )\n    }\n}\n  \nexport { AuthProvider, withAuth };\n","import React, { Component } from 'react'\nimport { TextField, Button } from '@material-ui/core';\nimport { withAuth } from '../../context/auth.context';\nimport './Login.css';\n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    } \n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n    return message;\n  },\n}\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {\n        username: null,\n        password: null\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.login(this.state.fields);\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](value)\n      }\n    })\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <div className=\"login\">\n        <span className=\"title\">Domind</span>\n        <span className=\"subtitle\">Mental health noseque</span>\n        <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className=\"form-item\">\n            <TextField type=\"text\" placeholder=\"Username\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"password\" placeholder=\"Password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Log in\n          </Button>\n        </form>\n        <a className=\"footer\" href=\"/signup\">Are you a doctor? Create your account here</a>\n      </div>\n    )\n  }\n}\n\nexport default withAuth(Login);","import AuthService from \"../../services/auth-service\"\n\nconst Logout = () => {\n    const authService = new AuthService();\n    authService.logout().then(() => {\n        window.location.href = '/login';\n    });\n\n    return '';\n}\n\nexport default Logout;\n","import React, { Component } from 'react'\nimport { withAuth } from '../../context/auth.context';\nimport { TextField, Button } from '@material-ui/core';\nimport './Signup.css';\n\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/ \n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    }\n\n    return message;\n  },\n  name: (value) => {\n    let message;\n    if(!value){\n      message = 'Name is required';\n    }\n\n    return message;\n  },\n  email: (value) => {\n    let message;\n    if(!value){\n      message = 'Email is required';\n    } else if(!EMAIL_PATTERN.test(value)){\n      message = 'Invalid email';\n    }\n\n    return message;\n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n\n    return message;\n  },\n  mobilephone: (value) => {\n    let message;\n    if(!value){\n      message = 'Phone number is required';\n    } else if(value.length < 9){\n      message = 'Invalid phone number'\n    }\n\n    return message;\n  },\n}\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {\n        username: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        mobilephone: null,\n      },\n      errors: {\n        username: null,\n        name: null,\n        email: null,\n        password: null,\n        mobilephone: null,\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const data = {\n        ...this.state.fields,\n    };\n    this.props.signup(data);\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](value)\n      }\n    })\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <div className=\"signup\">\n        <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className=\"form-item\">\n            <TextField type=\"text\" placeholder=\"Username\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"text\" placeholder=\"Name\" name=\"name\" value={fields.name} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"password\" placeholder=\"Password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"tel\" placeholder=\"Mobile Phone\" name=\"mobilephone\" value={fields.mobilephone} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"text\" placeholder=\"Email\" name=\"email\" value={fields.email} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n            Create user\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { withAuth } from '../../context/auth.context';\nimport AuthService from '../../services/auth-service';\nimport { TextField, Button } from '@material-ui/core';\n\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\nconst validators = {\n    username: (value) => {\n      let message;\n      if(!value){\n        message = 'Username is required';\n      }\n  \n      return message;\n    },\n    name: (value) => {\n      let message;\n      if(!value){\n        message = 'Name is required';\n      }\n  \n      return message;\n    },\n    birthdate: (value) => {\n        let message;\n        if(!value){\n          message = 'Birthdate is required';\n        }\n    \n        return message;\n    },\n    email: (value) => {\n      let message;\n      if(!value){\n        message = 'Email is required';\n      } else if(!EMAIL_PATTERN.test(value)){\n        message = 'Invalid email';\n      }\n  \n      return message;\n    },\n    password: (value) => {\n      let message;\n      if(!value){\n        message = 'Password is required';\n      } else if(value.length < 5){\n        message = 'Invalid password'\n      }\n      return message;\n    }\n}\n\nclass NewPatient extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            fields: {\n              username: \"\",\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              birthdate: null,\n            },\n            errors: {\n              username: null,\n              name: null,\n              email: null,\n              password: null,\n              birthdate: null,\n            }\n          }\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const data = {\n            ...this.state.fields,\n        };\n        const authService = new AuthService();\n        authService.signupPatient(data)\n        .then(()=>{\n            window.location.reload();\n        })\n    }\n\n    handleChange(event){\n        const { name, value } = event.target;\n        this.setState({\n          fields: {\n            ...this.state.fields,\n            [name]: value\n          },\n          errors: {\n            ...this.state.errors,\n            [name]: validators[name](value)\n          }\n        })\n    }\n\n    \n    render(){\n        if(this.props.user && this.props.user.data && Array.isArray(this.props.user.data.patients)){\n            return (\n              <div className=\"signup\">\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                  <div className=\"form-item\">\n                    <TextField type=\"text\" placeholder=\"Username\" name=\"username\" value={this.state.username} onChange={(e) => this.handleChange(e)} />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField type=\"text\" placeholder=\"Name\" name=\"name\" value={this.state.name} onChange={(e) => this.handleChange(e)} />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={(e) => this.handleChange(e)} />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField type=\"date\" placeholder=\"Birthdate\" name=\"birthdate\" value={this.state.birthdate} onChange={(e) => this.handleChange(e)} />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={(e) => this.handleChange(e)} />\n                  </div>\n                  <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Create patient</Button>\n              </form>\n              </div>\n            )\n        } else {\n            return(\n                <Redirect to='/user-selector' />\n            )\n        }\n    }\n}\n\nexport default withAuth(NewPatient);","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\n\n// Ruta solo disponible si el usuario no ha iniciado sesión\nfunction AnonRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente AnonRoute\n  const { exact, path, redirectPath = \"/user-selector\" } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if(isLoading) return <p>Loading...</p>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(isLoggedIn) return <Redirect to={redirectPath} />\n          else if(!isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(AnonRoute);\n","\nimport React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nfunction PrivateRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente PrivateRoute\n  const { exact, path } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if (isLoading) return <div className=\"loadingContainer\"><CachedIcon /></div>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(!isLoggedIn) return <Redirect to=\"/login\" />\n          else if(isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(PrivateRoute);","import React from 'react';\nimport { Redirect } from 'react-router'\nimport { withAuth } from '../context/auth.context'\nimport CachedIcon from '@material-ui/icons/Cached';\n\nconst UserSelector = (props) => {\n    if (props.user.data) {\n        if (Array.isArray(props.user.data.patients)) { // Is a doctor\n            return (<Redirect to={`/doctor-profile/${props.user.data._id}`} />)\n        } else {\n            return (<Redirect to={`/patient-profile/${props.user.data._id}`} />)\n        }\n    }\n\n    setTimeout(() => {\n        window.location.reload();\n    }, 200);\n\n    return <div className=\"loadingContainer\"><CachedIcon /></div>\n}\n\nexport default withAuth(UserSelector);\n","import axios from 'axios';\n\nexport default class DoctorService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/doctor`,\n            withCredentials: true\n        })\n    }\n\n    getDoctor(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editDoctor(body) {\n        return(this.instance.put(`/edit`, body))\n    }\n}","import React, { Component } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './BaseModal.css';\n\nclass BaseModal extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        if(this.props.visible === true){\n            return(\n                <div className=\"modal-background\" onClick={this.props.onModalClose}>\n                    <div className=\"modal-container\" onClick={(e) => {e.stopPropagation()}}>\n                        <div className=\"modalCloseButton\" onClick={this.props.onModalClose}><CloseIcon /></div>\n                        {this.props.children}\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default BaseModal;","import React, { Component } from 'react';\nimport DoctorService from '../../services/doctor-service';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { TextField, Button } from '@material-ui/core';\n\nclass EditDoctorModal extends Component {\n    constructor(props){\n        super(props);\n\n        const { name, username, email, mobilephone } = props.content;\n\n        this.state = {\n            name,\n            username,\n            email,\n            mobilephone,\n            isSuccess: false,\n        };\n    }\n\n    onUsernameChange(value) {\n        this.setState({ username: value });\n    }\n\n    onNameChange(value) {\n        this.setState({ name: value });\n    }\n\n    onEmailChange(value) {\n        this.setState({ email: value });\n    }\n\n    onMobilephoneChange(value) {\n        this.setState({ mobilephone: value });\n    }\n\n    editDoctor() {\n        const doctorService = new DoctorService();\n        doctorService.editDoctor({\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            mobilephone:this.state.mobilephone,\n        }).then(() => {\n            this.setState({isSuccess: true});\n        })\n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div className=\"modalBody\">\n                    <div className=\"modalRow\">\n                        <label>Username:</label><TextField value={this.state.username} onChange={(e) => {this.onUsernameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Name:</label><TextField value={this.state.name} onChange={(e) => {this.onNameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Email:</label><TextField value={this.state.email} onChange={(e) => {this.onEmailChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Mobilephone:</label><TextField value={this.state.mobilephone} type=\"tel\" onChange={(e) => {this.onMobilephoneChange(e.target.value)}} />\n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.editDoctor(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default EditDoctorModal;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport DoctorService from '../../services/doctor-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport EditDoctorModal from '../../components/modals/EditDoctorModal';\n\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './Profile.css';\n\nclass DoctorProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            doctor: {\n                patients: [],\n            },\n            isEditDoctorModalVisible: false,\n        };\n    }\n\n    getDoctorData() {\n        const id = this.props.match.params.id;\n        const doctorService = new DoctorService();\n        doctorService.getDoctor(id)\n        .then((response) => {\n            this.setState({\n                doctor: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        this.getDoctorData();\n    }\n\n    onModalClose(){\n        this.getDoctorData();\n        this.setState({\n            isEditDoctorModalVisible: false,\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1>{this.state.doctor.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <span>{this.state.doctor.email}</span>\n                        <span>{this.state.doctor.mobilephone}</span>\n                        <div onClick={() => {this.setState({ isEditDoctorModalVisible : true })}}><EditIcon /></div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Patients</h2>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.doctor.patients.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <span className=\"listRowTitle\">{item.name}</span>\n                                    <a href={`/patient-details/${item._id}`}><ArrowForwardIcon /></a>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isEditDoctorModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <EditDoctorModal content={this.state.doctor} />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(DoctorProfile));\n","import axios from 'axios';\n\nexport default class PatientService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/patient`,\n            withCredentials: true\n        })\n    }\n\n    getPatient(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editPatient(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deletePatient(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}","import axios from 'axios';\n\nexport default class DiaryService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/diary`,\n            withCredentials: true\n        })\n    }\n\n    createDiary(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getDiary(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteDiary(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import axios from 'axios';\n\nexport default class ActivityService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activity`,\n            withCredentials: true\n        })\n    }\n\n    createActivity(body){\n        return(this.instance.post('/create', body))\n    }\n\n    getActivity(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editActivity(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deleteActivity(id) {\n        return(this.instance.delete(`/${id}`));\n    }\n}\n\n","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport './BaseModal.css';\n\nclass ActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            answers: [],\n            isSuccess: false,\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.content)\n        const answers = this.props.content.questions.map(() => {\n            return \"\";\n        })\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    onAnswerChange(value, index){\n        const answers = this.state.answers;\n        answers[index] = value;\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    sendAnswers(){\n        const activityService = new ActivityService();\n        activityService.editActivity(this.props.content._id, { answers: this.state.answers })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    \n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div>\n                    <div>\n                        {this.props.content.questions.map((item, index) => {\n                            return(\n                                <div>\n                                    <h3>{item}</h3>\n                                    <input type=\"text\" onChange={(e) => {this.onAnswerChange(e.target.value, index)}}/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <button onClick={() => { this.sendAnswers(this); }}>Send answers</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ActivityModal;\n","import React, { Component } from 'react';\nimport DiaryService from '../../services/diary-service';\nimport { Button } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nclass DiaryModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createDiary(){\n        const diaryService = new DiaryService();\n        diaryService.createDiary({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return (<CheckCircleIcon />)\n        } else {\n            return (\n                <div className=\"textModal\">\n                    <textarea readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <Button onClick={() => { this.createDiary(this); }}>Send</Button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default DiaryModal;","export const getDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${day}/${month}/${year}`;\n}\n\nexport const getInputDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport DiaryService from '../../services/diary-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport ActivityModal from '../../components/modals/ActivityModal';\nimport DiaryModal from '../../components/modals/DiaryModal';\nimport { getDateFormat } from '../../helpers/helpers';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport './Profile.css';\n\nclass PatientProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                diary: [],\n            },\n            isActivityModalVisible: false,\n            currentActivity: {},\n            isDiaryModalVisible: false,\n            currentDiary: {},\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    openActivityModal(activity){\n        this.setState({\n            isActivityModalVisible: true,\n            currentActivity: activity,\n        });\n    }\n\n    openDiaryModal(diary){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: diary,\n        });\n    }\n\n    newDiary(){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: {},\n        })\n    }\n\n    onCloseModal(){\n        this.getPatientData();\n        this.setState({\n            isActivityModalVisible: false,\n            isDiaryModalVisible: false,\n        })\n    }\n\n    deleteDiary(diary){\n        const id = diary._id;\n        const diaryService = new DiaryService();\n        diaryService.deleteDiary(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1>{this.state.patient.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <span>{this.state.patient.email}</span>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Activities</h2>\n                    </div>                    <div className=\"list\">\n                        {this.state.patient.activities.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                    {(!item.answers || !item.answers.length) ?\n                                        (<div onClick={() => {this.openActivityModal(item)}}><AnnouncementIcon /></div>) : <CheckBoxIcon />}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Diaries</h2>\n                        <div onClick={() => {this.newDiary()}}><AddCircleIcon /></div>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.patient.diary.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <div className=\"listPack\">\n                                        <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                        <div onClick={() => {this.openDiaryModal(item)}}><VisibilityIcon /></div>\n                                    </div>\n                                    <div onClick={() => {this.deleteDiary(item)}}><DeleteIcon /></div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isActivityModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <ActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isDiaryModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <DiaryModal\n                        content={this.state.currentDiary}\n                        isNew={!this.state.currentDiary || !this.state.currentDiary.comment}\n                        patientId={this.state.patient._id}\n                        />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientProfile));","import axios from 'axios';\n\nexport default class SessionService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/doctor-session`,\n            withCredentials: true\n        })\n    }\n\n    createSession(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getSession(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteSession(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import React, { Component } from 'react';\n\nclass SeeActivity extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const haveAnswers = this.props.content.answers && this.props.content.answers.length;\n\n        return(\n            <div>\n                <div className=\"modalTitle\">Activity</div>\n                <div>\n                    {this.props.content.questions.map((item, index) => {\n                        return(\n                            <div>\n                                <h3>{item}</h3>\n                                <p>{haveAnswers ? this.props.content.answers[index] : 'No answer'}</p>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SeeActivity;","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service'\nimport { TextField, Button } from '@material-ui/core';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nclass CreateActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            questions: [\"\"],\n            isSuccess: false,\n        }\n    }\n\n    onTextChange(value, index){\n        const questionsAux = [...this.state.questions];\n        questionsAux[index] = value;\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    addNewQuestion(){\n        const questionsAux = [...this.state.questions];\n        questionsAux.push(\"\")\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    sendQuestions(){\n        const questionsAux = [...this.state.questions];\n        const filteredQuestions = questionsAux.filter((item) => {\n            if(item.length > 0){\n                return true;\n            } else {\n                return false;\n            }\n        })\n\n        if(filteredQuestions.length > 0){\n            const activityService = new ActivityService();\n            activityService.createActivity({\n                questions: filteredQuestions,\n                patient: this.props.patientId\n            })\n            .then(() => {\n                this.setState({\n                    isSuccess: true,\n                })\n            })\n        }\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return(<CheckCircleIcon />)\n        } else {\n            return(\n                <div className=\"createActivityModal\">\n                    <div className=\"createActivityModalList\">\n                        {this.state.questions.map((item, index) => {\n                            return(\n                                <div className=\"modalRow\">\n                                    <TextField placeholder=\"Question...\" value={item} onChange={(e) => {this.onTextChange(e.target.value, index)}}/>\n                                    {index === this.state.questions.length - 1 ? (<div onClick={()=>{this.addNewQuestion(this)}}><AddCircleOutlineIcon /></div>) : null}\n                                </div>\n                            )\n                        })}\n                        \n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.sendQuestions(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CreateActivityModal;","import React, { Component } from 'react';\nimport SessionService from '../../services/session-service';\nimport { Button } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nclass SessionModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createSession(){\n        const sessionService = new SessionService();\n        sessionService.createSession({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return (<CheckCircleIcon />)\n        } else {\n            return (\n                <div className=\"textModal\">\n                    <textarea readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <Button onClick={() => { this.createSession(this); }}>Send</Button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default SessionModal;","import React, { Component } from 'react';\nimport PatientService from '../../services/patient-service';\nimport { getInputDateFormat } from '../../helpers/helpers';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { TextField, Button } from '@material-ui/core';\n\nclass EditPatientModal extends Component {\n    constructor(props){\n        super(props);\n\n        const { name, username, email, birthdate } = props.content;\n        console.log(getInputDateFormat(birthdate))\n        this.state = {\n            name,\n            username,\n            email,\n            birthdate: getInputDateFormat(birthdate),\n            isSuccess: false,\n        };\n    }\n\n    onUsernameChange(value) {\n        this.setState({ username: value });\n    }\n\n    onNameChange(value) {\n        this.setState({ name: value });\n    }\n\n    onEmailChange(value) {\n        this.setState({ email: value });\n    }\n\n    onBirthdateChange(value) {\n        this.setState({ birthdate: value });\n    }\n\n    editPatient() {\n        const patientService = new PatientService();\n        patientService.editPatient(this.props.content._id, {\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            birthdate: new Date(this.state.birthdate),\n        }).then(() => {\n            this.setState({isSuccess: true});\n        })\n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div className=\"modalBody\">\n                    <div className=\"modalRow\">\n                        <label>Username:</label><TextField value={this.state.username} onChange={(e) => {this.onUsernameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Name:</label><TextField value={this.state.name} onChange={(e) => {this.onNameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Email:</label><TextField value={this.state.email} onChange={(e) => {this.onEmailChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Birthdate:</label><TextField value={this.state.birthdate} type=\"date\" onChange={(e) => {this.onBirthdateChange(e.target.value)}} />\n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.editPatient(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default EditPatientModal;","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport ActivityService from '../../services/activity-service';\nimport SessionService from '../../services/session-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport SeeActivityModal from '../../components/modals/SeeActivityModal';\nimport CreateActivityModal from '../../components/modals/CreateActivityModal';\nimport SessionModal from '../../components/modals/SessionModal';\nimport { getDateFormat } from '../../helpers/helpers';\nimport EditPatientModal from '../../components/modals/EditPatientModal';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './Profile.css';\n\nclass PatientDetails extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                sessions: []\n            },\n            isSeeActivityModalVisible: false,\n            currentActivity: {},\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    seeActivityModal(activity){\n        this.setState({\n            isSeeActivityModalVisible: true,\n            currentActivity: activity\n        })\n    }\n\n    onModalClose(){\n        this.getPatientData();\n        this.setState({\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    seeSessionModal(session){\n        this.setState({\n            isSessionModalVisible: true,\n            currentSession: session\n        })\n    }\n\n    deleteActivity(activity){\n        const id = activity._id;\n        const activityService = new ActivityService();\n        activityService.deleteActivity(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deleteSession(session){\n        const id = session._id;\n        const sessionService = new SessionService();\n        sessionService.deleteSession(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deletePatient(){\n        const id = this.state.patient._id;\n        const patientService = new PatientService();\n        patientService.deletePatient(id)\n        .then(() => {\n            window.location.href = '/user-selector';\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1>{this.state.patient.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <div className=\"listPack\">\n                            <span>{this.state.patient.email}</span>\n                            <div onClick={() => {this.setState({ isEditPatientModalVisible: true })}}><EditIcon /></div>\n                        </div>\n                        <div onClick={() => {this.deletePatient(this)}}><DeleteIcon /></div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Activities</h2>\n                        <div onClick={()=>{this.setState({isCreateActivityModalVisible: true})}}><AddCircleIcon /></div>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.patient.activities.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <div className=\"listPack\">\n                                        <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                        <div onClick={() => {this.seeActivityModal(item)}}><VisibilityIcon /></div>\n                                    </div>\n                                    <div onClick={() => {this.deleteActivity(item)}}><DeleteIcon /></div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div>\n                        <div className=\"sectionTitleContainer\">\n                            <h2 className=\"sectionTitle\">Sessions</h2>\n                            <div onClick={() => {this.setState({isSessionModalVisible: true})}}><AddCircleIcon /></div>\n                        </div>\n                        <div className=\"list\">\n                            {this.state.patient.sessions.map((item) => {\n                                return(\n                                    <div className=\"listRow\">\n                                        <div className=\"listPack\">\n                                            <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                            <div onClick={() => {this.seeSessionModal(item)}}><VisibilityIcon /></div>\n                                        </div>\n                                        <div onClick={() => {this.deleteSession(item)}}><DeleteIcon /></div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isSeeActivityModalVisible} onModalClose={() => {this.setState({isSeeActivityModalVisible:false})}}>\n                    <SeeActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isCreateActivityModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <CreateActivityModal patientId={this.state.patient._id} />\n                </BaseModal>\n                <BaseModal visible={this.state.isSessionModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <SessionModal \n                        content={this.state.currentSession}\n                        isNew={!this.state.currentSession || !this.state.currentSession.comment}\n                        patientId={this.state.patient._id}\n                    />\n                </BaseModal>\n                <BaseModal visible={this.state.isEditPatientModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <EditPatientModal content={this.state.patient} />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientDetails));","import React from 'react';\nimport { withAuth } from '../context/auth.context';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport './NavbarComponent.css';\n\nconst Navbar = (props) => {\n    if (!props.user || !props.user.data || !props.user.data.username) {\n        return null;\n    }\n\n    const redirectTo = (url) => {\n        window.location.href = url;\n    }\n\n    return (\n        <div className=\"navbar-container\">\n            <div className={`navbar-item ${!window.location.href.includes('/new-patient') ? 'selected' : ''}`} onClick={() => {redirectTo('/user-selector');}}><HomeIcon /></div>\n            {(props.user.data.patients && Array.isArray(props.user.data.patients) ? (<div className={`navbar-item ${window.location.href.includes('new-patient') ? 'selected' : ''}`} onClick={() => {redirectTo('/new-patient');}}><PersonAddIcon /></div>) : null)}\n            <div className=\"navbar-item\" onClick={() => {redirectTo('/logout');}}><ExitToAppIcon /></div>\n        </div>\n    )\n}\n\nexport default withAuth(Navbar);","import { Redirect, Route } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport Logout from './pages/login/Logout';\nimport Signup from './pages/signup/Signup';\nimport SignupPatient from './pages/signup/SignupPatient';\nimport AnonRoute from './components/routes/AnonRoutes';\nimport PrivateRoute from './components/routes/PrivateRoutes';\nimport UserSelector from './components/UserSelector';\nimport './App.css';\nimport DoctorProfile from './pages/profile/DoctorProfile';\nimport PatientProfile from './pages/profile/PatientProfile';\nimport PatientDetails from './pages/profile/PatientDetails';\nimport NavbarComponent from './components/NavbarComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComponent />\n      <div className=\"appContent\">\n        <Route exact path=\"/\" component={() => (<Redirect to=\"/login\" />)} />\n        <PrivateRoute exact path=\"/user-selector\" component={UserSelector} />\n        <PrivateRoute path=\"/doctor-profile/:id\" component={DoctorProfile} />\n        <PrivateRoute path=\"/patient-profile/:id\" component={PatientProfile} />\n        <PrivateRoute path=\"/patient-details/:id\" component={PatientDetails} />\n        <PrivateRoute path=\"/new-patient\" component={SignupPatient} />\n        <AnonRoute exact path=\"/signup\" component={Signup} />\n        <AnonRoute exact path=\"/login\" component={Login} />\n        <Route exact path=\"/logout\" component={Logout} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/auth.context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}