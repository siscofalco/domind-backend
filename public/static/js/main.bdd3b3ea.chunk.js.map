{"version":3,"sources":["services/auth-service.js","context/auth.context.js","pages/login/Login.js","pages/login/Logout.js","pages/signup/Signup.js","pages/signup/SignupPatient.js","components/routes/AnonRoutes.js","components/routes/PrivateRoutes.js","components/UserSelector.js","services/doctor-service.js","components/modals/BaseModal.js","components/modals/EditDoctorModal.js","pages/profile/DoctorProfile.js","services/patient-service.js","services/diary-service.js","services/activity-service.js","components/modals/ActivityModal.js","components/modals/DiaryModal.js","helpers/helpers.js","pages/profile/PatientProfile.js","services/session-service.js","components/modals/SeeActivityModal.js","components/modals/CreateActivityModal.js","components/modals/SessionModal.js","components/modals/EditPatientModal.js","pages/profile/PatientDetails.js","components/NavbarComponent.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","this","instance","axios","create","baseURL","process","withCredentials","data","post","get","React","createContext","Consumer","Provider","AuthProvider","state","isLoggedIn","isLoading","user","signup","a","response","setState","login","then","catch","logout","error","console","edit","className","value","props","children","Component","withAuth","WrappedComponent","validators","username","password","message","length","fields","errors","event","preventDefault","target","name","onSubmit","e","handleSubmit","TextField","type","placeholder","onChange","handleChange","Button","variant","color","href","Logout","window","location","EMAIL_PATTERN","email","test","mobilephone","isError","finalValue","replace","toLowerCase","helperText","generator","require","birthdate","signupPatient","reload","pwd","generate","symbols","excludeSimilarCharacters","Array","isArray","patients","readOnly","onClick","generatePassword","to","routeProps","exact","path","redirectPath","ComponentToShow","component","render","_id","setTimeout","DoctorService","id","body","put","BaseModal","visible","onModalClose","stopPropagation","EditDoctorModal","content","isSuccess","editDoctor","onUsernameChange","onNameChange","onEmailChange","onMobilephoneChange","DoctorProfile","doctor","isEditDoctorModalVisible","match","params","getDoctor","log","getDoctorData","map","item","withRouter","PatientService","delete","DiaryService","ActivityService","ActivityModal","answers","questions","index","editActivity","onAnswerChange","sendAnswers","DiaryModal","comment","text","createDiary","patient","patientId","isNew","onTextChange","getDateFormat","date","d","Date","day","getDate","month","getMonth","year","getFullYear","getInputDateFormat","PatientProfile","activities","diary","isActivityModalVisible","currentActivity","isDiaryModalVisible","currentDiary","getPatient","getPatientData","activity","deleteDiary","openActivityModal","newDiary","openDiaryModal","onCloseModal","SessionService","SeeActivity","haveAnswers","CreateActivityModal","questionsAux","push","filteredQuestions","filter","createActivity","addNewQuestion","sendQuestions","SessionModal","createSession","EditPatientModal","editPatient","onBirthdateChange","PatientDetails","sessions","isSeeActivityModalVisible","isCreateActivityModalVisible","isSessionModalVisible","isEditPatientModalVisible","currentSession","session","deleteActivity","deleteSession","deletePatient","seeActivityModal","seeSessionModal","SeeActivityModal","redirectTo","url","includes","App","UserSelector","SignupPatient","Signup","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd3b3ea.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class AuthService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signupPatient(data){\n        return(this.instance.post('/signup-patient', data)); \n    }\n\n    signup(data){\n        return(this.instance.post('/signup-doctor', data)); \n    }\n\n    login(data){\n        return(this.instance.post('/login', data));\n    }\n\n    logout(){\n        return(this.instance.post('/logout'));\n    }\n\n    isLoggedIn(){\n        return(this.instance.get('/loggedin'));\n    }\n\n    edit(data){\n        return(this.instance.post('/edit', data));\n    }\n\n}","import React from 'react';\nimport AuthService from '../services/auth-service';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nconst { Consumer, Provider } = React.createContext();\n\nclass AuthProvider extends React.Component {\n    state = {\n        isLoggedIn: false,\n        isLoading: true,\n        user: null\n    };\n\n    AuthService = new AuthService();\n\n    componentDidMount() {\n        this.AuthService.isLoggedIn()\n        .then((user) => {\n            if (user) {\n                this.setState({\n                    isLoggedIn: true,\n                    isLoading: false,\n                    user\n                });\n            }\n        })\n        .catch(() => {\n            this.setState({ isLoggedIn: false, isLoading: false, user: null})\n        })\n    }\n\n     // data serán los campos rellados del formulario de Signup\n    signup = async (data) => {\n        try {\n            const response = await this.AuthService.signup(data);\n            if(response){\n                this.setState({ isLoggedIn: true, user: response.data })\n            }\n        } catch(err){\n            this.setState({ isLoggedIn: false, user: null })\n        }\n    }\n\n    // data serán los campos rellados del formulario de Login\n    login = (data) => {\n        this.AuthService.login(data)\n        .then(response => this.setState({ isLoggedIn: true, user: response.data }))\n        .catch(() => this.setState({ isLoggedIn: false, user: null }))\n    }\n\n    logout = () => {\n        this.AuthService.logout()\n        .then(() => this.setState({ isLoggedIn: false, user: null }))\n        .catch(error => console.error(error))\n    }\n\n    edit = (data) => {\n        this.AuthService.edit(data)\n        .then(response => this.setState({ ...this.state, user: response.data }))\n        .catch(error => console.error(error))\n    }\n\n  render(){\n    const { isLoggedIn, isLoading, user } = this.state;\n\n    if(isLoading) return <div className=\"loadingContainer\"><CachedIcon /></div>;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, signup: this.signup, login: this.login, logout: this.logout, edit: this.edit }}>\n        {this.props.children}\n      </Provider>\n    )\n  }\n}\n\n\n\n// HOC - High Order Component that converts regular component into Consumer\nconst withAuth = (WrappedComponent) => {\n\n    return function(props){\n      return (\n        <Consumer>\n          {\n            (value) => {\n              const { isLoading, isLoggedIn, user, signup, login, logout, edit } = value;\n  \n              // Pasamos las props propias del contexto y además las props que ya recibiera el componente previamente via {...props}\n              return (\n                <WrappedComponent\n                  isLoggedIn={isLoggedIn}\n                  isLoading={isLoading}\n                  user={user}\n                  signup={signup}\n                  login={login}\n                  logout={logout}\n                  edit={edit}\n                  {...props}\n  \n                />\n              )\n            }\n          }\n        </Consumer>\n      )\n    }\n}\n  \nexport { AuthProvider, withAuth };\n","import React, { Component } from 'react'\nimport { TextField, Button } from '@material-ui/core';\nimport { withAuth } from '../../context/auth.context';\nimport './Login.css';\n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    } \n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n    return message;\n  },\n}\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {\n        username: null,\n        password: null\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.login(this.state.fields);\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](value)\n      }\n    })\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <div className=\"login\">\n        <span className=\"title\">Domind</span>\n        <span className=\"subtitle\">Mental health dashboard</span>\n        <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className=\"form-item\">\n            <TextField type=\"text\" placeholder=\"Username\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField type=\"password\" placeholder=\"Password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} />\n          </div>\n\n          <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Log in\n          </Button>\n        </form>\n        <a className=\"footer\" href=\"/signup\">Are you a doctor? Create your account here</a>\n      </div>\n    )\n  }\n}\n\nexport default withAuth(Login);","import AuthService from \"../../services/auth-service\"\n\nconst Logout = () => {\n    const authService = new AuthService();\n    authService.logout().then(() => {\n        window.location.href = '/login';\n    });\n\n    return '';\n}\n\nexport default Logout;\n","import React, { Component } from 'react'\nimport { withAuth } from '../../context/auth.context';\nimport { TextField, Button } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport './Signup.css';\n\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/ \n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    }\n\n    return message;\n  },\n  name: (value) => {\n    let message;\n    if(!value){\n      message = 'Name is required';\n    }\n\n    return message;\n  },\n  email: (value) => {\n    let message;\n    if(!value){\n      message = 'Email is required';\n    } else if(!EMAIL_PATTERN.test(value)){\n      message = 'Invalid email';\n    }\n\n    return message;\n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n\n    return message;\n  },\n  mobilephone: (value) => {\n    let message;\n    if(!value){\n      message = 'Phone number is required';\n    } else if(value.length < 9){\n      message = 'Invalid phone number'\n    }\n\n    return message;\n  },\n}\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isError: false,\n      fields: {\n        username: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        mobilephone: null,\n      },\n      errors: {\n        username: null,\n        name: null,\n        email: null,\n        password: null,\n        mobilephone: null,\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const data = {\n        ...this.state.fields,\n    };\n    this.setState({isError: false});\n    this.props.signup(data).then((response) => {\n      if (!response) {\n        this.setState({\n          isError: true,\n        })\n      }\n    });\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    let finalValue = value;\n    if (name === 'username') {\n      finalValue = finalValue.replace(/ /g, '').toLowerCase();\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: finalValue\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](finalValue)\n      }\n    })\n  }\n\n  render() {\n    const { fields, errors, isError } = this.state;\n    return (\n      <div className=\"signup\">\n        <a className=\"backIcon\" href=\"/login\"><ArrowBackIosIcon /></a>\n        <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className=\"form-item\">\n            <TextField\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={fields.username}\n              onChange={(e) => this.handleChange(e)}\n              error={!!errors.username}\n              helperText={errors.username}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"name\"\n              value={fields.name}\n              onChange={(e) => this.handleChange(e)}\n              error={!!errors.name}\n              helperText={errors.name}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={fields.password}\n              onChange={(e) => this.handleChange(e)}\n              error={!!errors.password}\n              helperText={errors.password}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField\n              type=\"tel\"\n              placeholder=\"Mobile Phone\"\n              name=\"mobilephone\"\n              value={fields.mobilephone}\n              onChange={(e) => this.handleChange(e)}\n              error={!!errors.mobilephone}\n              helperText={errors.mobilephone}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <TextField\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={fields.email}\n              onChange={(e) => this.handleChange(e)}\n              error={!!errors.email}\n              helperText={errors.email}\n            />\n          </div>\n\n          <Button type=\"submit\" variant=\"outlined\" color={isError ? 'secondary' : 'primary'} >\n            Create user\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { withAuth } from '../../context/auth.context';\nimport AuthService from '../../services/auth-service';\nimport { TextField, Button } from '@material-ui/core';\nconst generator = require('generate-password');\n\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\nconst validators = {\n    username: (value) => {\n      let message;\n      if(!value){\n        message = 'Username is required';\n      }\n  \n      return message;\n    },\n    name: (value) => {\n      let message;\n      if(!value){\n        message = 'Name is required';\n      }\n  \n      return message;\n    },\n    birthdate: (value) => {\n        let message;\n        if(!value){\n          message = 'Birthdate is required';\n        }\n    \n        return message;\n    },\n    email: (value) => {\n      let message;\n      if(!value){\n        message = 'Email is required';\n      } else if(!EMAIL_PATTERN.test(value)){\n        message = 'Invalid email';\n      }\n  \n      return message;\n    },\n}\n\nclass NewPatient extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          isError: false,\n          fields: {\n            username: \"\",\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            birthdate: null,\n          },\n          errors: {\n            username: null,\n            name: null,\n            email: null,\n            password: null,\n            birthdate: null,\n          }\n        };\n    }\n  \n    handleSubmit(event){\n        event.preventDefault();\n        const data = {\n            ...this.state.fields,\n        };\n        this.setState({ isError: false });\n        const authService = new AuthService();\n        authService.signupPatient(data)\n        .then(()=>{\n            window.location.reload();\n        }).catch(() => {\n          this.setState({\n            isError: true,\n          })\n        })\n    }\n\n    handleChange(event){\n        const { name, value } = event.target;\n        let finalValue = value;\n        if (name === 'username') {\n          finalValue = finalValue.replace(/ /g, '').toLowerCase();\n        }\n        this.setState({\n          fields: {\n            ...this.state.fields,\n            [name]: finalValue\n          },\n          errors: {\n            ...this.state.errors,\n            [name]: validators[name](finalValue)\n          }\n        })\n    }\n\n    generatePassword(){\n      const pwd = generator.generate({\n        length: 5,\n        symbols: false,\n        excludeSimilarCharacters: true,\n      });\n\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          password: pwd,\n        }\n      })\n    }\n\n    render(){\n        if(this.props.user && this.props.user.data && Array.isArray(this.props.user.data.patients)){\n            return (\n              <div className=\"signup\">\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                  <div className=\"form-item\">\n                    <TextField\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      name=\"username\"\n                      value={this.state.fields.username}\n                      onChange={(e) => this.handleChange(e)}\n                      error={!!this.state.errors.username}\n                      helperText={this.state.errors.username}\n                    />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={this.state.fields.name}\n                      onChange={(e) => this.handleChange(e)}\n                      error={!!this.state.errors.name}\n                      helperText={this.state.errors.name}\n                    />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField type=\"password\" placeholder=\"Password\" name=\"password\" readOnly={true} value={this.state.fields.password} />\n                    <Button className=\"generatePasswordButton\" onClick={() => {this.generatePassword(this)}} variant=\"outlined\" color=\"secondary\">Generate password</Button>\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField\n                      type=\"date\"\n                      placeholder=\"Birthdate\"\n                      name=\"birthdate\"\n                      value={this.state.fields.birthdate}\n                      onChange={(e) => this.handleChange(e)}\n                      error={!!this.state.errors.birthdate}\n                      helperText={this.state.errors.birthdate}\n                    />\n                  </div>\n\n                  <div className=\"form-item\">\n                    <TextField\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      value={this.state.fields.email}\n                      onChange={(e) => this.handleChange(e)}\n                      error={!!this.state.errors.email}\n                      helperText={this.state.errors.email}\n                    />\n                  </div>\n                  <Button type=\"submit\" variant=\"outlined\" color={this.state.isError ? 'secondary' : 'primary'}>Create patient</Button>\n              </form>\n              </div>\n            )\n        } else {\n            return(\n                <Redirect to='/user-selector' />\n            )\n        }\n    }\n}\n\nexport default withAuth(NewPatient);","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\n\n// Ruta solo disponible si el usuario no ha iniciado sesión\nfunction AnonRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente AnonRoute\n  const { exact, path, redirectPath = \"/user-selector\" } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if(isLoading) return <p>Loading...</p>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(isLoggedIn) return <Redirect to={redirectPath} />\n          else if(!isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(AnonRoute);\n","\nimport React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nfunction PrivateRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente PrivateRoute\n  const { exact, path } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if (isLoading) return <div className=\"loadingContainer\"><CachedIcon /></div>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(!isLoggedIn) return <Redirect to=\"/login\" />\n          else if(isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(PrivateRoute);","import React from 'react';\nimport { Redirect } from 'react-router'\nimport { withAuth } from '../context/auth.context'\nimport CachedIcon from '@material-ui/icons/Cached';\n\nconst UserSelector = (props) => {\n    if (props.user.data) {\n        if (Array.isArray(props.user.data.patients)) { // Is a doctor\n            return (<Redirect to={`/doctor-profile/${props.user.data._id}`} />)\n        } else {\n            return (<Redirect to={`/patient-profile/${props.user.data._id}`} />)\n        }\n    }\n\n    setTimeout(() => {\n        window.location.reload();\n    }, 200);\n\n    return <div className=\"loadingContainer\"><CachedIcon /></div>\n}\n\nexport default withAuth(UserSelector);\n","import axios from 'axios';\n\nexport default class DoctorService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/doctor`,\n            withCredentials: true\n        })\n    }\n\n    getDoctor(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editDoctor(body) {\n        return(this.instance.put(`/edit`, body))\n    }\n}","import React, { Component } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './BaseModal.css';\n\nclass BaseModal extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        if(this.props.visible === true){\n            return(\n                <div className=\"modal-background\" onClick={this.props.onModalClose}>\n                    <div className=\"modal-container\" onClick={(e) => {e.stopPropagation()}}>\n                        <div className=\"modalCloseButton\" onClick={this.props.onModalClose}><CloseIcon /></div>\n                        {this.props.children}\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default BaseModal;","import React, { Component } from 'react';\nimport DoctorService from '../../services/doctor-service';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { TextField, Button } from '@material-ui/core';\n\nclass EditDoctorModal extends Component {\n    constructor(props){\n        super(props);\n\n        const { name, username, email, mobilephone } = props.content;\n\n        this.state = {\n            name,\n            username,\n            email,\n            mobilephone,\n            isSuccess: false,\n        };\n    }\n\n    onUsernameChange(value) {\n        this.setState({ username: value });\n    }\n\n    onNameChange(value) {\n        this.setState({ name: value });\n    }\n\n    onEmailChange(value) {\n        this.setState({ email: value });\n    }\n\n    onMobilephoneChange(value) {\n        this.setState({ mobilephone: value });\n    }\n\n    editDoctor() {\n        const doctorService = new DoctorService();\n        doctorService.editDoctor({\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            mobilephone:this.state.mobilephone,\n        }).then(() => {\n            this.setState({isSuccess: true});\n        })\n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div className=\"modalBody\">\n                    <div className=\"modalRow\">\n                        <label>Username:</label><TextField value={this.state.username} onChange={(e) => {this.onUsernameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Name:</label><TextField value={this.state.name} onChange={(e) => {this.onNameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Email:</label><TextField value={this.state.email} onChange={(e) => {this.onEmailChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Mobilephone:</label><TextField value={this.state.mobilephone} type=\"tel\" onChange={(e) => {this.onMobilephoneChange(e.target.value)}} />\n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.editDoctor(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default EditDoctorModal;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport DoctorService from '../../services/doctor-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport EditDoctorModal from '../../components/modals/EditDoctorModal';\n\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './Profile.css';\n\nclass DoctorProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            doctor: {\n                patients: [],\n            },\n            isEditDoctorModalVisible: false,\n        };\n    }\n\n    getDoctorData() {\n        const id = this.props.match.params.id;\n        const doctorService = new DoctorService();\n        doctorService.getDoctor(id)\n        .then((response) => {\n            this.setState({\n                doctor: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        this.getDoctorData();\n    }\n\n    onModalClose(){\n        this.getDoctorData();\n        this.setState({\n            isEditDoctorModalVisible: false,\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1 className=\"name\">{this.state.doctor.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <span>{this.state.doctor.email}</span>\n                        <span>{this.state.doctor.mobilephone}</span>\n                        <div onClick={() => {this.setState({ isEditDoctorModalVisible : true })}}><EditIcon /></div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Patients</h2>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.doctor.patients.length ? this.state.doctor.patients.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <span className=\"listRowTitle\">{item.name}</span>\n                                    <a href={`/patient-details/${item._id}`}><ArrowForwardIcon /></a>\n                                </div>\n                            );\n                        }) : 'You have no patients'}\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isEditDoctorModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <EditDoctorModal content={this.state.doctor} />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(DoctorProfile));\n","import axios from 'axios';\n\nexport default class PatientService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/patient`,\n            withCredentials: true\n        })\n    }\n\n    getPatient(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editPatient(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deletePatient(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}","import axios from 'axios';\n\nexport default class DiaryService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/diary`,\n            withCredentials: true\n        })\n    }\n\n    createDiary(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getDiary(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteDiary(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import axios from 'axios';\n\nexport default class ActivityService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activity`,\n            withCredentials: true\n        })\n    }\n\n    createActivity(body){\n        return(this.instance.post('/create', body))\n    }\n\n    getActivity(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editActivity(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deleteActivity(id) {\n        return(this.instance.delete(`/${id}`));\n    }\n}\n\n","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service';\nimport { Button } from '@material-ui/core';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport './BaseModal.css';\n\nclass ActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            answers: [],\n            isSuccess: false,\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.content)\n        const answers = this.props.content.questions.map(() => {\n            return \"\";\n        })\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    onAnswerChange(value, index){\n        const answers = this.state.answers;\n        answers[index] = value;\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    sendAnswers(){\n        const activityService = new ActivityService();\n        activityService.editActivity(this.props.content._id, { answers: this.state.answers })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    \n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div className=\"activityModal\">\n                    <div>\n                        {this.props.content.questions.map((item, index) => {\n                            return(\n                                <div>\n                                    <h3>{item}</h3>\n                                    <input type=\"text\" onChange={(e) => {this.onAnswerChange(e.target.value, index)}}/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => { this.sendAnswers(this); }}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ActivityModal;\n","import React, { Component } from 'react';\nimport DiaryService from '../../services/diary-service';\nimport { Button } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nclass DiaryModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createDiary(){\n        const diaryService = new DiaryService();\n        diaryService.createDiary({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return (<CheckCircleIcon />)\n        } else {\n            return (\n                <div className=\"textModal\">\n                    <textarea readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <Button onClick={() => { this.createDiary(this); }}>Send</Button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default DiaryModal;","export const getDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${day}/${month}/${year}`;\n}\n\nexport const getInputDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport DiaryService from '../../services/diary-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport ActivityModal from '../../components/modals/ActivityModal';\nimport DiaryModal from '../../components/modals/DiaryModal';\nimport { getDateFormat } from '../../helpers/helpers';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport './Profile.css';\n\nclass PatientProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                diary: [],\n            },\n            isActivityModalVisible: false,\n            currentActivity: {},\n            isDiaryModalVisible: false,\n            currentDiary: {},\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    openActivityModal(activity){\n        this.setState({\n            isActivityModalVisible: true,\n            currentActivity: activity,\n        });\n    }\n\n    openDiaryModal(diary){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: diary,\n        });\n    }\n\n    newDiary(){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: {},\n        })\n    }\n\n    onCloseModal(){\n        this.getPatientData();\n        this.setState({\n            isActivityModalVisible: false,\n            isDiaryModalVisible: false,\n        })\n    }\n\n    deleteDiary(diary){\n        const id = diary._id;\n        const diaryService = new DiaryService();\n        diaryService.deleteDiary(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1 className=\"name\">{this.state.patient.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <span>{this.state.patient.email}</span>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Activities</h2>\n                    </div>                    <div className=\"list\">\n                        {this.state.patient.activities.length ? this.state.patient.activities.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                    {(!item.answers || !item.answers.length) ?\n                                        (<div onClick={() => {this.openActivityModal(item)}}><AnnouncementIcon /></div>) : <CheckBoxIcon />}\n                                </div>\n                            )\n                        }) : 'You have no activities'}\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Diaries</h2>\n                        <div onClick={() => {this.newDiary()}}><AddCircleIcon /></div>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.patient.length ? this.state.patient.diary.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <div className=\"listPack\">\n                                        <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                        <div onClick={() => {this.openDiaryModal(item)}}><VisibilityIcon /></div>\n                                    </div>\n                                    <div onClick={() => {this.deleteDiary(item)}}><DeleteIcon /></div>\n                                </div>\n                            )\n                        }) : 'You have no diaries'}\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isActivityModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <ActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isDiaryModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <DiaryModal\n                        content={this.state.currentDiary}\n                        isNew={!this.state.currentDiary || !this.state.currentDiary.comment}\n                        patientId={this.state.patient._id}\n                        />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientProfile));","import axios from 'axios';\n\nexport default class SessionService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/doctor-session`,\n            withCredentials: true\n        })\n    }\n\n    createSession(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getSession(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteSession(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import React, { Component } from 'react';\n\nclass SeeActivity extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const haveAnswers = this.props.content.answers && this.props.content.answers.length;\n\n        return(\n            <div>\n                <div className=\"modalTitle\">Activity</div>\n                <div>\n                    {this.props.content.questions.map((item, index) => {\n                        return(\n                            <div>\n                                <h3>{item}</h3>\n                                <p>{haveAnswers ? this.props.content.answers[index] : 'No answer'}</p>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SeeActivity;","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service'\nimport { TextField, Button } from '@material-ui/core';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nclass CreateActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            questions: [\"\"],\n            isSuccess: false,\n        }\n    }\n\n    onTextChange(value, index){\n        const questionsAux = [...this.state.questions];\n        questionsAux[index] = value;\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    addNewQuestion(){\n        const questionsAux = [...this.state.questions];\n        questionsAux.push(\"\")\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    sendQuestions(){\n        const questionsAux = [...this.state.questions];\n        const filteredQuestions = questionsAux.filter((item) => {\n            if(item.length > 0){\n                return true;\n            } else {\n                return false;\n            }\n        })\n\n        if(filteredQuestions.length > 0){\n            const activityService = new ActivityService();\n            activityService.createActivity({\n                questions: filteredQuestions,\n                patient: this.props.patientId\n            })\n            .then(() => {\n                this.setState({\n                    isSuccess: true,\n                })\n            })\n        }\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return(<CheckCircleIcon />)\n        } else {\n            return(\n                <div className=\"createActivityModal\">\n                    <div className=\"createActivityModalList\">\n                        {this.state.questions.map((item, index) => {\n                            return(\n                                <div className=\"modalRow\">\n                                    <TextField placeholder=\"Question...\" value={item} onChange={(e) => {this.onTextChange(e.target.value, index)}}/>\n                                    {index === this.state.questions.length - 1 ? (<div onClick={()=>{this.addNewQuestion(this)}}><AddCircleOutlineIcon /></div>) : null}\n                                </div>\n                            )\n                        })}\n                        \n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.sendQuestions(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CreateActivityModal;","import React, { Component } from 'react';\nimport SessionService from '../../services/session-service';\nimport { Button } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nclass SessionModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createSession(){\n        const sessionService = new SessionService();\n        sessionService.createSession({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return (<CheckCircleIcon />)\n        } else {\n            return (\n                <div className=\"textModal\">\n                    <textarea readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <Button onClick={() => { this.createSession(this); }}>Send</Button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default SessionModal;","import React, { Component } from 'react';\nimport PatientService from '../../services/patient-service';\nimport { getInputDateFormat } from '../../helpers/helpers';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { TextField, Button } from '@material-ui/core';\n\nclass EditPatientModal extends Component {\n    constructor(props){\n        super(props);\n\n        const { name, username, email, birthdate } = props.content;\n        console.log(getInputDateFormat(birthdate))\n        this.state = {\n            name,\n            username,\n            email,\n            birthdate: getInputDateFormat(birthdate),\n            isSuccess: false,\n        };\n    }\n\n    onUsernameChange(value) {\n        this.setState({ username: value });\n    }\n\n    onNameChange(value) {\n        this.setState({ name: value });\n    }\n\n    onEmailChange(value) {\n        this.setState({ email: value });\n    }\n\n    onBirthdateChange(value) {\n        this.setState({ birthdate: value });\n    }\n\n    editPatient() {\n        const patientService = new PatientService();\n        patientService.editPatient(this.props.content._id, {\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            birthdate: new Date(this.state.birthdate),\n        }).then(() => {\n            this.setState({isSuccess: true});\n        })\n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return (<CheckCircleIcon />);\n        } else {\n            return(\n                <div className=\"modalBody\">\n                    <div className=\"modalRow\">\n                        <label>Username:</label><TextField value={this.state.username} onChange={(e) => {this.onUsernameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Name:</label><TextField value={this.state.name} onChange={(e) => {this.onNameChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Email:</label><TextField value={this.state.email} onChange={(e) => {this.onEmailChange(e.target.value)}} />\n                    </div>\n                    <div className=\"modalRow\">\n                        <label>Birthdate:</label><TextField value={this.state.birthdate} type=\"date\" onChange={(e) => {this.onBirthdateChange(e.target.value)}} />\n                    </div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.editPatient(this)}}>Send</Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default EditPatientModal;","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport ActivityService from '../../services/activity-service';\nimport SessionService from '../../services/session-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport SeeActivityModal from '../../components/modals/SeeActivityModal';\nimport CreateActivityModal from '../../components/modals/CreateActivityModal';\nimport SessionModal from '../../components/modals/SessionModal';\nimport { getDateFormat } from '../../helpers/helpers';\nimport EditPatientModal from '../../components/modals/EditPatientModal';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './Profile.css';\n\nclass PatientDetails extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                sessions: []\n            },\n            isSeeActivityModalVisible: false,\n            currentActivity: {},\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    seeActivityModal(activity){\n        this.setState({\n            isSeeActivityModalVisible: true,\n            currentActivity: activity\n        })\n    }\n\n    onModalClose(){\n        this.getPatientData();\n        this.setState({\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n            currentSession: {},\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    seeSessionModal(session){\n        this.setState({\n            isSessionModalVisible: true,\n            currentSession: session\n        })\n    }\n\n    deleteActivity(activity){\n        const id = activity._id;\n        const activityService = new ActivityService();\n        activityService.deleteActivity(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deleteSession(session){\n        const id = session._id;\n        const sessionService = new SessionService();\n        sessionService.deleteSession(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deletePatient(){\n        const id = this.state.patient._id;\n        const patientService = new PatientService();\n        patientService.deletePatient(id)\n        .then(() => {\n            window.location.href = '/user-selector';\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"userDetails\">\n                    <h1 className=\"name\">{this.state.patient.name}</h1>\n                    <div className=\"userDetailsRow\">\n                        <div className=\"listPack\">\n                            <span>{this.state.patient.email}</span>\n                            <div onClick={() => {this.setState({ isEditPatientModalVisible: true })}}><EditIcon /></div>\n                        </div>\n                        <div onClick={() => {this.deletePatient(this)}}><DeleteIcon /></div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"sectionTitleContainer\">\n                        <h2 className=\"sectionTitle\">Activities</h2>\n                        <div onClick={()=>{this.setState({isCreateActivityModalVisible: true})}}><AddCircleIcon /></div>\n                    </div>\n                    <div className=\"list\">\n                        {this.state.patient.activities.length ? this.state.patient.activities.map((item) => {\n                            return(\n                                <div className=\"listRow\">\n                                    <div className=\"listPack\">\n                                        <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                        <div onClick={() => {this.seeActivityModal(item)}}><VisibilityIcon /></div>\n                                    </div>\n                                    <div onClick={() => {this.deleteActivity(item)}}><DeleteIcon /></div>\n                                </div>\n                            )\n                        }) : 'This patient has no activities'}\n                    </div>\n                    <div>\n                        <div className=\"sectionTitleContainer\">\n                            <h2 className=\"sectionTitle\">Sessions</h2>\n                            <div onClick={() => {this.setState({isSessionModalVisible: true})}}><AddCircleIcon /></div>\n                        </div>\n                        <div className=\"list\">\n                            {this.state.patient.sessions.length ? this.state.patient.sessions.map((item) => {\n                                return(\n                                    <div className=\"listRow\">\n                                        <div className=\"listPack\">\n                                            <span className=\"listRowTitle\">{getDateFormat(item.date)}</span>\n                                            <div onClick={() => {this.seeSessionModal(item)}}><VisibilityIcon /></div>\n                                        </div>\n                                        <div onClick={() => {this.deleteSession(item)}}><DeleteIcon /></div>\n                                    </div>\n                                )\n                            }) : 'This patient has no sessions'}\n                        </div>\n                    </div>\n                </div>\n                <BaseModal visible={this.state.isSeeActivityModalVisible} onModalClose={() => {this.setState({isSeeActivityModalVisible:false})}}>\n                    <SeeActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isCreateActivityModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <CreateActivityModal patientId={this.state.patient._id} />\n                </BaseModal>\n                <BaseModal visible={this.state.isSessionModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <SessionModal \n                        content={this.state.currentSession}\n                        isNew={!this.state.currentSession || !this.state.currentSession.comment}\n                        patientId={this.state.patient._id}\n                    />\n                </BaseModal>\n                <BaseModal visible={this.state.isEditPatientModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <EditPatientModal content={this.state.patient} />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientDetails));","import React from 'react';\nimport { withAuth } from '../context/auth.context';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport './NavbarComponent.css';\n\nconst Navbar = (props) => {\n    if (!props.user || !props.user.data || !props.user.data.username) {\n        return null;\n    }\n\n    const redirectTo = (url) => {\n        window.location.href = url;\n    }\n\n    return (\n        <div className=\"navbar-container\">\n            <div className={`navbar-item ${!window.location.href.includes('/new-patient') ? 'selected' : ''}`} onClick={() => {redirectTo('/user-selector');}}><HomeIcon /></div>\n            {(props.user.data.patients && Array.isArray(props.user.data.patients) ? (<div className={`navbar-item ${window.location.href.includes('new-patient') ? 'selected' : ''}`} onClick={() => {redirectTo('/new-patient');}}><PersonAddIcon /></div>) : null)}\n            <div className=\"navbar-item\" onClick={() => {redirectTo('/logout');}}><ExitToAppIcon /></div>\n        </div>\n    )\n}\n\nexport default withAuth(Navbar);","import { Redirect, Route } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport Logout from './pages/login/Logout';\nimport Signup from './pages/signup/Signup';\nimport SignupPatient from './pages/signup/SignupPatient';\nimport AnonRoute from './components/routes/AnonRoutes';\nimport PrivateRoute from './components/routes/PrivateRoutes';\nimport UserSelector from './components/UserSelector';\nimport './App.css';\nimport DoctorProfile from './pages/profile/DoctorProfile';\nimport PatientProfile from './pages/profile/PatientProfile';\nimport PatientDetails from './pages/profile/PatientDetails';\nimport NavbarComponent from './components/NavbarComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComponent />\n      <div className=\"appContent\">\n        <Route exact path=\"/\" component={() => (<Redirect to=\"/login\" />)} />\n        <PrivateRoute exact path=\"/user-selector\" component={UserSelector} />\n        <PrivateRoute path=\"/doctor-profile/:id\" component={DoctorProfile} />\n        <PrivateRoute path=\"/patient-profile/:id\" component={PatientProfile} />\n        <PrivateRoute path=\"/patient-details/:id\" component={PatientDetails} />\n        <PrivateRoute path=\"/new-patient\" component={SignupPatient} />\n        <AnonRoute exact path=\"/signup\" component={Signup} />\n        <AnonRoute exact path=\"/login\" component={Login} />\n        <Route exact path=\"/logout\" component={Logout} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/auth.context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}